$calc-column-width: null;
$calc-column-margin: null;

@if $column-width != "" {
    $calc-column-margin: (((($grid-width - ($column-width * $grid-columns))) / ($grid-columns - 1)) * (100 / $grid-width));
    $calc-column-width: ($column-width  * (100 / $grid-width));
}
@if $column-margin != "" {
    $calc-column-width: ((($grid-width - ($column-margin * ($grid-columns - 1))) / $grid-columns) * (100 / $grid-width));
    $calc-column-margin: ($column-margin  * (100 / $grid-width));
}

$current-breakpoint: 1;

.grid {
    float: left;
    clear: both;
    width: 100%;
}
.row {
    max-width: rem($grid-width);
    margin: 0 auto;
    padding: 0 rem(10);   
    @include box-sizing(content-box);
    &:after {
        @include clear-fix;
        content: ' ';
    }
}
.col {
    float: left;
    display: inline;
    width: 100%;
    margin: 0 unquote($calc-column-margin + "%") 0 0;
    &:last-child {
        margin-right: 0;
    }
    &.last {
        margin-right: 0 !important;
        
    }
}
@each $breakpoint in $breakpoints {      
    $slug: nth($breakpoint-alias, $current-breakpoint);   
    @if $current-breakpoint != 1 { 
        .#{$slug}-show {
            display: none;
        } 
    }
    @include breakpoint(nth($breakpoints, $current-breakpoint), $current-breakpoint) {      
        .row {    
            padding: 0 rem(10 * $current-breakpoint);        
        }
        .col {
            @for $i from 1 through $grid-columns {
                &.#{$slug}-#{$i} {
                    width: unquote((($calc-column-width * $i) + ($calc-column-margin * ($i - 1))) + "%");
                }
            }
        }   
        @for $i from 0 through ($grid-columns - 1) {
            .#{$slug}-push-#{$i} {
                margin-left: unquote((($calc-column-width * $i) + ($calc-column-margin * $i)) + "%");
            }
        }        
        .#{$slug}-show {
            display: block;
        }
        .#{$slug}-hide {
            display: none;
        }   
    }
    $current-breakpoint: $current-breakpoint + 1;
}